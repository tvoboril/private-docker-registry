---
apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-registry-config
  namespace: registry
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    auth:
      htpasswd:
        realm: basic-realm
        path: /auth/htpasswd
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-cache
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-cache
  template:
    metadata:
      labels:
        app: registry-cache
    spec:
      containers:
      - name: registry-cache
        image: redis
        ports:
        - containerPort: 6379
        command:
        - redis-server
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: registry
spec:
  selector:
    app: registry
  ports:
  - port: 5000
    targetPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: registry-cache
  namespace: registry
spec:
  selector:
    app: registry-cache
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: registry
  name: registry
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: registry
        env:
        - name: REGISTRY_STORAGE
          value: s3
        - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
          value: redis
        - name: REGISTRY_REDIS_ADDR
          value: registry-cache.registry.svc.cluster.local:6379
        image: registry:2
        imagePullPolicy: Always
        name: registry
        ports:
        - containerPort: 5000
          name: 5000tcp01
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - name: config
          mountPath: /etc/docker/registry
          readOnly: true
        - name: htpasswd
          mountPath: /auth
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: docker-registry-config
            defaultMode: 256
            optional: false
        - name: htpasswd
          secret:
            secretName: htpasswd
            items:
              - key: HTPASSWD
                path: htpasswd
---
